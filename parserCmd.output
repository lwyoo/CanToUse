Grammar

    0 $accept: file $end

    1 file: statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 statement: compound_statement
    5          | expression_statement
    6          | include_statement
    7          | unary_expression
    8          | activate_message_statement

    9 compound_statement: '{' '}'
   10                   | '{' statement_list '}'

   11 expression_statement: ';'
   12                     | expression ';'

   13 expression: assignment_expression

   14 activate_message_statement: TK_ACTIVATE '(' TK_STRING ')'

   15 assignment_expression: var '=' unary_expression

   16 var: TK_ID
   17    | can_signal

   18 can_signal: TK_ID TK_SCOPE TK_ID

   19 include_statement: TK_INCLUDE TK_STRING

   20 unary_expression: TK_ID
   21                 | TK_NUM
   22                 | TK_STRING
   23                 | TK_TRUE
   24                 | TK_FALSE
   25                 | TK_ID '(' ')'
   26                 | TK_ID '(' argument_expression_list ')'

   27 argument_expression_list: unary_expression
   28                         | argument_expression_list ',' unary_expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 25 26
    ')' (41) 14 25 26
    ',' (44) 28
    ';' (59) 11 12
    '=' (61) 15
    '{' (123) 9 10
    '}' (125) 9 10
    error (256)
    TK_STRING <string> (258) 14 19 22
    TK_ID <string> (259) 16 18 20 25 26
    TK_NUM <string> (260) 21
    TK_INCLUDE (261) 19
    TK_ACTIVATE (262) 14
    TK_TRUE <ival> (263) 23
    TK_FALSE <ival> (264) 24
    TK_SCOPE (265) 18


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    file (19)
        on left: 1
        on right: 0
    statement_list (20)
        on left: 2 3
        on right: 1 3 10
    statement (21)
        on left: 4 5 6 7 8
        on right: 2 3
    compound_statement (22)
        on left: 9 10
        on right: 4
    expression_statement (23)
        on left: 11 12
        on right: 5
    expression (24)
        on left: 13
        on right: 12
    activate_message_statement (25)
        on left: 14
        on right: 8
    assignment_expression (26)
        on left: 15
        on right: 13
    var <string> (27)
        on left: 16 17
        on right: 15
    can_signal <string> (28)
        on left: 18
        on right: 17
    include_statement (29)
        on left: 19
        on right: 6
    unary_expression (30)
        on left: 20 21 22 23 24 25 26
        on right: 7 15 27 28
    argument_expression_list (31)
        on left: 27 28
        on right: 26 28


State 0

    0 $accept: . file $end

    TK_STRING    shift, and go to state 1
    TK_ID        shift, and go to state 2
    TK_NUM       shift, and go to state 3
    TK_INCLUDE   shift, and go to state 4
    TK_ACTIVATE  shift, and go to state 5
    TK_TRUE      shift, and go to state 6
    TK_FALSE     shift, and go to state 7
    '{'          shift, and go to state 8
    ';'          shift, and go to state 9

    file                        go to state 10
    statement_list              go to state 11
    statement                   go to state 12
    compound_statement          go to state 13
    expression_statement        go to state 14
    expression                  go to state 15
    activate_message_statement  go to state 16
    assignment_expression       go to state 17
    var                         go to state 18
    can_signal                  go to state 19
    include_statement           go to state 20
    unary_expression            go to state 21


State 1

   22 unary_expression: TK_STRING .

    $default  reduce using rule 22 (unary_expression)


State 2

   16 var: TK_ID .
   18 can_signal: TK_ID . TK_SCOPE TK_ID
   20 unary_expression: TK_ID .
   25                 | TK_ID . '(' ')'
   26                 | TK_ID . '(' argument_expression_list ')'

    TK_SCOPE  shift, and go to state 22
    '('       shift, and go to state 23

    '='       reduce using rule 16 (var)
    $default  reduce using rule 20 (unary_expression)


State 3

   21 unary_expression: TK_NUM .

    $default  reduce using rule 21 (unary_expression)


State 4

   19 include_statement: TK_INCLUDE . TK_STRING

    TK_STRING  shift, and go to state 24


State 5

   14 activate_message_statement: TK_ACTIVATE . '(' TK_STRING ')'

    '('  shift, and go to state 25


State 6

   23 unary_expression: TK_TRUE .

    $default  reduce using rule 23 (unary_expression)


State 7

   24 unary_expression: TK_FALSE .

    $default  reduce using rule 24 (unary_expression)


State 8

    9 compound_statement: '{' . '}'
   10                   | '{' . statement_list '}'

    TK_STRING    shift, and go to state 1
    TK_ID        shift, and go to state 2
    TK_NUM       shift, and go to state 3
    TK_INCLUDE   shift, and go to state 4
    TK_ACTIVATE  shift, and go to state 5
    TK_TRUE      shift, and go to state 6
    TK_FALSE     shift, and go to state 7
    '{'          shift, and go to state 8
    '}'          shift, and go to state 26
    ';'          shift, and go to state 9

    statement_list              go to state 27
    statement                   go to state 12
    compound_statement          go to state 13
    expression_statement        go to state 14
    expression                  go to state 15
    activate_message_statement  go to state 16
    assignment_expression       go to state 17
    var                         go to state 18
    can_signal                  go to state 19
    include_statement           go to state 20
    unary_expression            go to state 21


State 9

   11 expression_statement: ';' .

    $default  reduce using rule 11 (expression_statement)


State 10

    0 $accept: file . $end

    $end  shift, and go to state 28


State 11

    1 file: statement_list .
    3 statement_list: statement_list . statement

    TK_STRING    shift, and go to state 1
    TK_ID        shift, and go to state 2
    TK_NUM       shift, and go to state 3
    TK_INCLUDE   shift, and go to state 4
    TK_ACTIVATE  shift, and go to state 5
    TK_TRUE      shift, and go to state 6
    TK_FALSE     shift, and go to state 7
    '{'          shift, and go to state 8
    ';'          shift, and go to state 9

    $default  reduce using rule 1 (file)

    statement                   go to state 29
    compound_statement          go to state 13
    expression_statement        go to state 14
    expression                  go to state 15
    activate_message_statement  go to state 16
    assignment_expression       go to state 17
    var                         go to state 18
    can_signal                  go to state 19
    include_statement           go to state 20
    unary_expression            go to state 21


State 12

    2 statement_list: statement .

    $default  reduce using rule 2 (statement_list)


State 13

    4 statement: compound_statement .

    $default  reduce using rule 4 (statement)


State 14

    5 statement: expression_statement .

    $default  reduce using rule 5 (statement)


State 15

   12 expression_statement: expression . ';'

    ';'  shift, and go to state 30


State 16

    8 statement: activate_message_statement .

    $default  reduce using rule 8 (statement)


State 17

   13 expression: assignment_expression .

    $default  reduce using rule 13 (expression)


State 18

   15 assignment_expression: var . '=' unary_expression

    '='  shift, and go to state 31


State 19

   17 var: can_signal .

    $default  reduce using rule 17 (var)


State 20

    6 statement: include_statement .

    $default  reduce using rule 6 (statement)


State 21

    7 statement: unary_expression .

    $default  reduce using rule 7 (statement)


State 22

   18 can_signal: TK_ID TK_SCOPE . TK_ID

    TK_ID  shift, and go to state 32


State 23

   25 unary_expression: TK_ID '(' . ')'
   26                 | TK_ID '(' . argument_expression_list ')'

    TK_STRING  shift, and go to state 1
    TK_ID      shift, and go to state 33
    TK_NUM     shift, and go to state 3
    TK_TRUE    shift, and go to state 6
    TK_FALSE   shift, and go to state 7
    ')'        shift, and go to state 34

    unary_expression          go to state 35
    argument_expression_list  go to state 36


State 24

   19 include_statement: TK_INCLUDE TK_STRING .

    $default  reduce using rule 19 (include_statement)


State 25

   14 activate_message_statement: TK_ACTIVATE '(' . TK_STRING ')'

    TK_STRING  shift, and go to state 37


State 26

    9 compound_statement: '{' '}' .

    $default  reduce using rule 9 (compound_statement)


State 27

    3 statement_list: statement_list . statement
   10 compound_statement: '{' statement_list . '}'

    TK_STRING    shift, and go to state 1
    TK_ID        shift, and go to state 2
    TK_NUM       shift, and go to state 3
    TK_INCLUDE   shift, and go to state 4
    TK_ACTIVATE  shift, and go to state 5
    TK_TRUE      shift, and go to state 6
    TK_FALSE     shift, and go to state 7
    '{'          shift, and go to state 8
    '}'          shift, and go to state 38
    ';'          shift, and go to state 9

    statement                   go to state 29
    compound_statement          go to state 13
    expression_statement        go to state 14
    expression                  go to state 15
    activate_message_statement  go to state 16
    assignment_expression       go to state 17
    var                         go to state 18
    can_signal                  go to state 19
    include_statement           go to state 20
    unary_expression            go to state 21


State 28

    0 $accept: file $end .

    $default  accept


State 29

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


State 30

   12 expression_statement: expression ';' .

    $default  reduce using rule 12 (expression_statement)


State 31

   15 assignment_expression: var '=' . unary_expression

    TK_STRING  shift, and go to state 1
    TK_ID      shift, and go to state 33
    TK_NUM     shift, and go to state 3
    TK_TRUE    shift, and go to state 6
    TK_FALSE   shift, and go to state 7

    unary_expression  go to state 39


State 32

   18 can_signal: TK_ID TK_SCOPE TK_ID .

    $default  reduce using rule 18 (can_signal)


State 33

   20 unary_expression: TK_ID .
   25                 | TK_ID . '(' ')'
   26                 | TK_ID . '(' argument_expression_list ')'

    '('  shift, and go to state 23

    $default  reduce using rule 20 (unary_expression)


State 34

   25 unary_expression: TK_ID '(' ')' .

    $default  reduce using rule 25 (unary_expression)


State 35

   27 argument_expression_list: unary_expression .

    $default  reduce using rule 27 (argument_expression_list)


State 36

   26 unary_expression: TK_ID '(' argument_expression_list . ')'
   28 argument_expression_list: argument_expression_list . ',' unary_expression

    ')'  shift, and go to state 40
    ','  shift, and go to state 41


State 37

   14 activate_message_statement: TK_ACTIVATE '(' TK_STRING . ')'

    ')'  shift, and go to state 42


State 38

   10 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 10 (compound_statement)


State 39

   15 assignment_expression: var '=' unary_expression .

    $default  reduce using rule 15 (assignment_expression)


State 40

   26 unary_expression: TK_ID '(' argument_expression_list ')' .

    $default  reduce using rule 26 (unary_expression)


State 41

   28 argument_expression_list: argument_expression_list ',' . unary_expression

    TK_STRING  shift, and go to state 1
    TK_ID      shift, and go to state 33
    TK_NUM     shift, and go to state 3
    TK_TRUE    shift, and go to state 6
    TK_FALSE   shift, and go to state 7

    unary_expression  go to state 43


State 42

   14 activate_message_statement: TK_ACTIVATE '(' TK_STRING ')' .

    $default  reduce using rule 14 (activate_message_statement)


State 43

   28 argument_expression_list: argument_expression_list ',' unary_expression .

    $default  reduce using rule 28 (argument_expression_list)
